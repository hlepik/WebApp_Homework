@model IEnumerable<BLL.App.DTO.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>@Resources.BLL.App.DTO.Products.MyProduct</h1>

<p>
    <a asp-action="Create" id="productForm">@Resources.Views.Crud.CRUD.Create</a>

</p>
<table class="table" >
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Color)
            </th>
            <th>
              @Html.DisplayNameFor(model => model.HasTransport)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.IsBooked)
            </th>
            <th>
             @Resources.BLL.App.DTO.Products.Location
            </th>
            <th>
                 @Resources.BLL.App.DTO.Products.Size
            </th>
            <th>
               @Html.DisplayNameFor(model => model.Condition)
            </th>
            <th>
                 @Html.DisplayNameFor(model => model.Material)
            </th>


        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HasTransport)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsBooked)
            </td>
            <td>
                @if (item.City != null)
                {
                    item.County += ", " + item.City;
                }
                @if (item.LocationDescription != null)
                {
                    item.County += ", " + item.LocationDescription;
                }
                @Html.DisplayFor(modelItem => item.County)

            </td>
            <td>

                @{
                    var size = "";
                }

                @if (item.Height != null)
                {
                    size += @Resources.BLL.App.DTO.Products.Height+ ": " + item.Height + " " + item.Unit;
                }
                @if (item.Width != null)
                {
                    if (size != "")
                    {
                        size += ", "+ "\n";
                    }
                    size += @Resources.BLL.App.DTO.Products.Width+ ": " + item.Width + " " + item.Unit;
                }
                 @if (item.Depth != null)
                {
                    if (size != "")
                    {
                        size += ", "+ "\n";
                    }
                    size += @Resources.BLL.App.DTO.Products.Depth + ": " +item.Depth + " " + item.Unit;
                }


                @Html.DisplayFor(modelItem => size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Condition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Material)
            </td>


            <td>

                <a asp-action="Edit" asp-route-id="@item.Id">@Resources.Views.Crud.CRUD.Edit</a>
               <a asp-action="Details" asp-route-id="@item.Id">@Resources.Views.Crud.CRUD.Details</a>
                <a asp-action="Delete" id="deleteButton" class="fa fa-trash" asp-route-id="@item.Id"></a>

            </td>
        </tr>
}
    </tbody>
</table>
